#resources:
#  repositories:
#  - repository: portable-stimulus
#    type: github
#    endpoint: PSSTools
#    name: mballance/portable-stimulus
trigger:
- master

jobs:
- job: PyPi_Linux
  pool:
   vmImage: 'ubuntu-18.04'

  variables:
  - name: build_num
    value: $(Build.BuildNumber)

  steps:
#  - checkout: self
#  - checkout: portable-stimulus
#    path: sys/portable-stimulus
#
#  - script: |
#      git -c http.https://github.com/mballance/portable-stimulus.extraheader="AUTHORIZATION: basic $(GITAUTH)" clone https://github.com/mballance/portable-stimulus sys/portable-stimulus
#    displayName: 'Checkout examples'

  - script: |
      ls sys
      ls sys/portable-stimulus
      sudo apt-get install default-jdk
    displayName: 'Install JDK'
  - script: |
      python3 -m pip install wheel twine 
      python3 -m pip install setuptools-antlr 
      python3 -m pip install antlr4-python3-runtime
      python3 -m pip install pytest pytest-cov
    displayName: 'Install wheel+twine'
  - script: |
      export PYTHONPATH=$(Build.Repository.LocalPath)/src
      python3 setup.py antlr
      python3  -m pytest unit --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'Run Unit Tests'

#  - script: |
    #  export PYTHONPATH=$(Build.Repository.LocalPath)/src
    #  python3 sys/runtest.py
    #displayName: 'Run Sys Tests'

  - task: PublishTestResults@2
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: '**/test-*.xml'
      testRunTitle: 'Unit Tests'
    
  - script: |
      python3 setup.py antlr bdist_wheel --universal
    displayName: 'Build Wheel'
  - task: TwineAuthenticate@1
    condition: eq(variables['Build.SourceBranchName'], 'master')
    inputs:
      pythonUploadServiceConnection: pypi-pssparser
  - script: |
      # Only deploy from master
      if test "$(Build.SourceBranchName)" = "master"; then
          python3 -m twine upload -r pssparser --config-file $(PYPIRC_PATH) dist/*.whl
      fi
    displayName: 'Upload to PyPi'
